require "spec_helper"

describe MkCoord::Matrix do
  context ".r_x" do
    subject { r_x(0.4090927848297817) }
    it { expect(subject).to match([
      [1.0, 0.0, 0.0], [
        0.0,
        be_within(1.0e-15).of(0.917482069783094),
        be_within(1.0e-17).of(0.39777713813959936)
      ], [
        0.0,
        be_within(1.0e-17).of(-0.39777713813959936),
        be_within(1.0e-15).of(0.917482069783094)
      ]
    ]) }
  end

  context ".r_y" do
    subject { r_y(6.24482770879939) }
    it { expect(subject).to match([
      [
        be_within(1.0e-16).of(0.9992644375163051),
        0.0,
        be_within(1.0e-17).of(0.03834819311548353)
      ], [0.0, 1.0, 0.0], [
        be_within(1.0e-17).of(-0.03834819311548353),
        0.0,
        be_within(1.0e-16).of(0.9992644375163051)
      ]
    ]) }
  end

  context ".r_z" do
    subject do
      r_z(-0.016630599800372015, [
        [0.9992644375163051, 0.0, 0.03834819311548353],
        [0.0, 1.0, 0.0],
        [-0.03834819311548353, 0.0, 0.9992644375163051]
      ])
    end
    it { expect(subject).to match([
      [
        be_within(1.0e-16).of(0.9991262539961299),
        be_within(1.0e-18).of(-0.016629833204489602),
        be_within(1.0e-18).of(0.038342890126486714)
      ], [
        be_within(1.0e-18).of(0.016617600923074276),
        be_within(1.0e-16).of(0.9998617147623919),
        be_within(1.0e-19).of(0.0006377240552040476)
      ], [
        be_within(1.0e-17).of(-0.03834819311548353),
        0.0,
        be_within(1.0e-16).of(0.9992644375163051)
      ]
    ]) }
  end

  context ".rotate" do
    subject do
      rotate([
        [1.0, 0.0, 0.0],
        [0.0, 0.917482069783094, 0.39777713813959936],
        [0.0, -0.39777713813959936, 0.917482069783094]
      ], [
        0.99443659220701, -0.038162917689578336, -0.016551776709600584
      ])
    end
    it { expect(subject).to match([
      be_within(1.0e-14).of(0.99443659220701),
      be_within(1.0e-17).of(-0.04159771108146677),
      be_within(1.0e-21).of(-5.622172494390565e-06)
    ]) }
  end
end

